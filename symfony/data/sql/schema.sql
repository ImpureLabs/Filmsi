CREATE TABLE article (id BIGINT AUTO_INCREMENT, name VARCHAR(250), content_teaser VARCHAR(250), content_content text, filename VARCHAR(250), meta_description VARCHAR(250), meta_keywords VARCHAR(250), url_key VARCHAR(250), about_stars bool, publish_date DATE, expiration_date DATE, state VARCHAR(255), user_id BIGINT, library_id BIGINT, photo_album_id BIGINT, video_album_id BIGINT, INDEX photo_album_id_idx (photo_album_id), INDEX video_album_id_idx (video_album_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE article_category (article_id BIGINT, category_id BIGINT, PRIMARY KEY(article_id, category_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE boxoffice_film (type VARCHAR(255), film_1_id BIGINT, film_2_id BIGINT, film_3_id BIGINT, film_4_id BIGINT, film_5_id BIGINT, INDEX film_1_id_idx (film_1_id), INDEX film_2_id_idx (film_2_id), INDEX film_3_id_idx (film_3_id), INDEX film_4_id_idx (film_4_id), INDEX film_5_id_idx (film_5_id), PRIMARY KEY(type)) ENGINE = INNODB;
CREATE TABLE category (id BIGINT AUTO_INCREMENT, name VARCHAR(250), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE cinema (id BIGINT AUTO_INCREMENT, name VARCHAR(250), location_id BIGINT, address VARCHAR(250), phone VARCHAR(250), website VARCHAR(250), lat VARCHAR(250), lng VARCHAR(250), map_zoom TINYINT UNSIGNED, seats VARCHAR(250), room_count TINYINT UNSIGNED, sound VARCHAR(250), is_type_film bool, is_type_digital bool, is_type_3d bool, ticket_price VARCHAR(250), filename VARCHAR(250), description_teaser VARCHAR(250), description_content text, meta_description VARCHAR(250), meta_keywords VARCHAR(250), url_key VARCHAR(250), publish_date DATE, state VARCHAR(255), user_id BIGINT, library_id BIGINT, INDEX user_id_idx (user_id), INDEX location_id_idx (location_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE cinema_article (article_id BIGINT, cinema_id BIGINT, PRIMARY KEY(article_id, cinema_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE cinema_promotion (id BIGINT AUTO_INCREMENT, name VARCHAR(250), filename VARCHAR(250), content text, cinema_id BIGINT, INDEX cinema_id_idx (cinema_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE cinema_schedule (id BIGINT AUTO_INCREMENT, cinema_id BIGINT, film_id BIGINT, day DATE NOT NULL, schedule VARCHAR(250), format VARCHAR(255), INDEX cinema_id_idx (cinema_id), INDEX film_id_idx (film_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE cinema_service (cinema_id BIGINT, service_id BIGINT, PRIMARY KEY(cinema_id, service_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE cinema_stire (stire_id BIGINT, cinema_id BIGINT, PRIMARY KEY(stire_id, cinema_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE comment (id BIGINT AUTO_INCREMENT, name TEXT, email TEXT, content text, user_id BIGINT, state bool, ip VARCHAR(100), type VARCHAR(100), created_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE content (id BIGINT, content text, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE festival (id BIGINT AUTO_INCREMENT, name VARCHAR(250), imdb_key VARCHAR(250), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE festival_edition (id BIGINT AUTO_INCREMENT, edition year NOT NULL, filename VARCHAR(250), meta_description VARCHAR(250), meta_keywords VARCHAR(250), url_key VARCHAR(250), description_teaser VARCHAR(250), description_content text, publish_date DATE, state VARCHAR(255), festival_id BIGINT, user_id BIGINT, library_id BIGINT, photo_album_id BIGINT, video_album_id BIGINT, INDEX photo_album_id_idx (photo_album_id), INDEX video_album_id_idx (video_album_id), INDEX user_id_idx (user_id), INDEX festival_id_idx (festival_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE festival_edition_article (article_id BIGINT, festival_edition_id BIGINT, PRIMARY KEY(article_id, festival_edition_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE festival_edition_photo_album (festival_edition_id BIGINT, album_id BIGINT, PRIMARY KEY(festival_edition_id, album_id)) ENGINE = INNODB;
CREATE TABLE festival_edition_stire (stire_id BIGINT, festival_edition_id BIGINT, PRIMARY KEY(stire_id, festival_edition_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE festival_edition_video_album (festival_edition_id BIGINT, album_id BIGINT, PRIMARY KEY(festival_edition_id, album_id)) ENGINE = INNODB;
CREATE TABLE festival_section (id BIGINT AUTO_INCREMENT, name VARCHAR(250), imdb_key VARCHAR(250), festival_edition_id BIGINT, INDEX festival_edition_id_idx (festival_edition_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE festival_section_participant (id BIGINT AUTO_INCREMENT, festival_section_id BIGINT, film_imdb VARCHAR(250), person_imdb VARCHAR(250), is_winner bool, INDEX festival_section_id_idx (festival_section_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE festival_section_person (festival_section_id BIGINT, person_id BIGINT, PRIMARY KEY(festival_section_id, person_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE film (id BIGINT AUTO_INCREMENT, imdb VARCHAR(250), is_series bool, name_ro VARCHAR(250), name_en VARCHAR(250), year year, rating VARCHAR(250), filename VARCHAR(250), meta_description VARCHAR(250), meta_keywords VARCHAR(250), url_key VARCHAR(250), duration VARCHAR(250), is_type_film bool, is_type_digital bool, is_type_3d bool, distribuitor VARCHAR(250), description_teaser VARCHAR(250), description_content text, publish_date DATE, state VARCHAR(255), user_id BIGINT, library_id BIGINT, photo_album_id BIGINT, video_album_id BIGINT, status_in_production bool, status_cinema bool, status_cinema_year BIGINT, status_cinema_month BIGINT, status_cinema_day BIGINT, status_dvd bool, status_dvd_year BIGINT, status_dvd_month BIGINT, status_dvd_day BIGINT, status_bluray bool, status_bluray_year BIGINT, status_bluray_month BIGINT, status_bluray_day BIGINT, status_online bool, status_online_year BIGINT, status_online_month BIGINT, status_online_day BIGINT, background_filename VARCHAR(250), INDEX photo_album_id_idx (photo_album_id), INDEX video_album_id_idx (video_album_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE film_article (article_id BIGINT, film_id BIGINT, PRIMARY KEY(article_id, film_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE film_episode (id BIGINT AUTO_INCREMENT, imdb VARCHAR(250), name VARCHAR(250), season TINYINT, number TINYINT, film_id BIGINT, INDEX film_id_idx (film_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE film_genre (film_id BIGINT, genre_id BIGINT, PRIMARY KEY(film_id, genre_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE film_person (film_id BIGINT, person_id BIGINT, is_actor bool, is_director bool, is_scriptwriter bool, is_producer bool, PRIMARY KEY(film_id, person_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE film_status (film_id BIGINT, in_production bool, cinema_status bool, cinema_year BIGINT, cinema_month BIGINT, cinema_day BIGINT, dvd_status bool, dvd_year BIGINT, dvd_month BIGINT, dvd_day BIGINT, bluray_status bool, bluray_year BIGINT, bluray_month BIGINT, bluray_day BIGINT, online_status bool, online_year BIGINT, online_month BIGINT, online_day BIGINT, PRIMARY KEY(film_id)) ENGINE = INNODB;
CREATE TABLE film_stire (stire_id BIGINT, film_id BIGINT, PRIMARY KEY(stire_id, film_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE genre (id BIGINT AUTO_INCREMENT, name VARCHAR(250), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE homepage (id BIGINT AUTO_INCREMENT, background_filename VARCHAR(250), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE library (id BIGINT AUTO_INCREMENT, type VARCHAR(250), imdb VARCHAR(250), name VARCHAR(250), publish_date DATE, category VARCHAR(250), user_id BIGINT, state VARCHAR(255), photo_album_id BIGINT, video_album_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE location (id BIGINT AUTO_INCREMENT, country VARCHAR(128), region VARCHAR(128), city VARCHAR(128), importance SMALLINT, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE person (id BIGINT AUTO_INCREMENT, first_name VARCHAR(250), last_name VARCHAR(250), date_of_birth DATE, date_of_death DATE, place_of_birth VARCHAR(250), filename VARCHAR(250), biography_teaser VARCHAR(250), biography_content text, meta_description VARCHAR(250), meta_keywords VARCHAR(250), url_key VARCHAR(250), state VARCHAR(255), imdb VARCHAR(250) NOT NULL, is_actor bool, is_director bool, is_scriptwriter bool, is_producer bool, publish_date DATE, user_id BIGINT, library_id BIGINT, photo_album_id BIGINT, video_album_id BIGINT, INDEX photo_album_id_idx (photo_album_id), INDEX video_album_id_idx (video_album_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE person_article (article_id BIGINT, person_id BIGINT, PRIMARY KEY(article_id, person_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE person_photo_album (person_id BIGINT, album_id BIGINT, PRIMARY KEY(person_id, album_id)) ENGINE = INNODB;
CREATE TABLE person_stire (stire_id BIGINT, person_id BIGINT, PRIMARY KEY(stire_id, person_id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE person_video_album (person_id BIGINT, album_id BIGINT, PRIMARY KEY(person_id, album_id)) ENGINE = INNODB;
CREATE TABLE photo (id BIGINT AUTO_INCREMENT, filename VARCHAR(50) NOT NULL, description VARCHAR(250), state VARCHAR(255), album_id BIGINT, position BIGINT, UNIQUE INDEX sortable_idx (position, album_id), INDEX album_id_idx (album_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE photo_album (id BIGINT AUTO_INCREMENT, name VARCHAR(250), library_id BIGINT, state VARCHAR(255), publish_date DATE, user_id BIGINT, INDEX user_id_idx (user_id), INDEX library_id_idx (library_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE service (id BIGINT AUTO_INCREMENT, name VARCHAR(250), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE shop (id BIGINT AUTO_INCREMENT, name VARCHAR(250), email VARCHAR(250), phone VARCHAR(250), url VARCHAR(250), filename VARCHAR(250), description text, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE shop_film (id BIGINT AUTO_INCREMENT, shop_id BIGINT, film_id BIGINT, url VARCHAR(250), format VARCHAR(255), INDEX shop_id_idx (shop_id), INDEX film_id_idx (film_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE stire (id BIGINT AUTO_INCREMENT, name VARCHAR(250), content_teaser VARCHAR(250), content_content text, filename VARCHAR(250), meta_description VARCHAR(250), meta_keywords VARCHAR(250), url_key VARCHAR(250), about_stars bool, publish_date DATE, expiration_date DATE, state VARCHAR(255), user_id BIGINT, library_id BIGINT, photo_album_id BIGINT, video_album_id BIGINT, INDEX photo_album_id_idx (photo_album_id), INDEX video_album_id_idx (video_album_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE video (id BIGINT AUTO_INCREMENT, code VARCHAR(250) NOT NULL, name VARCHAR(250), state VARCHAR(255), album_id BIGINT, position BIGINT, UNIQUE INDEX sortable_idx (position, album_id), INDEX album_id_idx (album_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE video_album (id BIGINT AUTO_INCREMENT, name VARCHAR(250), library_id BIGINT, state VARCHAR(255), publish_date DATE, user_id BIGINT, INDEX user_id_idx (user_id), INDEX library_id_idx (library_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE visit (id BIGINT AUTO_INCREMENT, library_id BIGINT, url VARCHAR(250), name VARCHAR(250), ip VARCHAR(100), created_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), location_id BIGINT, gender VARCHAR(255), dob DATE, email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), INDEX location_id_idx (location_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE article ADD CONSTRAINT article_video_album_id_video_album_id FOREIGN KEY (video_album_id) REFERENCES video_album(id) ON DELETE CASCADE;
ALTER TABLE article ADD CONSTRAINT article_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE article ADD CONSTRAINT article_photo_album_id_photo_album_id FOREIGN KEY (photo_album_id) REFERENCES photo_album(id) ON DELETE CASCADE;
ALTER TABLE article_category ADD CONSTRAINT article_category_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id) ON DELETE CASCADE;
ALTER TABLE article_category ADD CONSTRAINT article_category_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE boxoffice_film ADD CONSTRAINT boxoffice_film_film_5_id_film_id FOREIGN KEY (film_5_id) REFERENCES film(id);
ALTER TABLE boxoffice_film ADD CONSTRAINT boxoffice_film_film_4_id_film_id FOREIGN KEY (film_4_id) REFERENCES film(id);
ALTER TABLE boxoffice_film ADD CONSTRAINT boxoffice_film_film_3_id_film_id FOREIGN KEY (film_3_id) REFERENCES film(id);
ALTER TABLE boxoffice_film ADD CONSTRAINT boxoffice_film_film_2_id_film_id FOREIGN KEY (film_2_id) REFERENCES film(id);
ALTER TABLE boxoffice_film ADD CONSTRAINT boxoffice_film_film_1_id_film_id FOREIGN KEY (film_1_id) REFERENCES film(id);
ALTER TABLE cinema ADD CONSTRAINT cinema_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE cinema ADD CONSTRAINT cinema_location_id_location_id FOREIGN KEY (location_id) REFERENCES location(id);
ALTER TABLE cinema_article ADD CONSTRAINT cinema_article_cinema_id_cinema_id FOREIGN KEY (cinema_id) REFERENCES cinema(id) ON DELETE CASCADE;
ALTER TABLE cinema_article ADD CONSTRAINT cinema_article_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE cinema_promotion ADD CONSTRAINT cinema_promotion_cinema_id_cinema_id FOREIGN KEY (cinema_id) REFERENCES cinema(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE cinema_schedule ADD CONSTRAINT cinema_schedule_film_id_film_id FOREIGN KEY (film_id) REFERENCES film(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE cinema_schedule ADD CONSTRAINT cinema_schedule_cinema_id_cinema_id FOREIGN KEY (cinema_id) REFERENCES cinema(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE cinema_service ADD CONSTRAINT cinema_service_service_id_genre_id FOREIGN KEY (service_id) REFERENCES genre(id) ON DELETE CASCADE;
ALTER TABLE cinema_service ADD CONSTRAINT cinema_service_cinema_id_cinema_id FOREIGN KEY (cinema_id) REFERENCES cinema(id) ON DELETE CASCADE;
ALTER TABLE cinema_stire ADD CONSTRAINT cinema_stire_stire_id_stire_id FOREIGN KEY (stire_id) REFERENCES stire(id) ON DELETE CASCADE;
ALTER TABLE cinema_stire ADD CONSTRAINT cinema_stire_cinema_id_cinema_id FOREIGN KEY (cinema_id) REFERENCES cinema(id) ON DELETE CASCADE;
ALTER TABLE festival_edition ADD CONSTRAINT festival_edition_video_album_id_video_album_id FOREIGN KEY (video_album_id) REFERENCES video_album(id) ON DELETE CASCADE;
ALTER TABLE festival_edition ADD CONSTRAINT festival_edition_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE festival_edition ADD CONSTRAINT festival_edition_photo_album_id_photo_album_id FOREIGN KEY (photo_album_id) REFERENCES photo_album(id) ON DELETE CASCADE;
ALTER TABLE festival_edition ADD CONSTRAINT festival_edition_festival_id_festival_id FOREIGN KEY (festival_id) REFERENCES festival(id) ON DELETE CASCADE;
ALTER TABLE festival_edition_article ADD CONSTRAINT festival_edition_article_festival_edition_id_festival_edition_id FOREIGN KEY (festival_edition_id) REFERENCES festival_edition(id) ON DELETE CASCADE;
ALTER TABLE festival_edition_article ADD CONSTRAINT festival_edition_article_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE festival_edition_photo_album ADD CONSTRAINT fffi FOREIGN KEY (festival_edition_id) REFERENCES festival_edition(id) ON DELETE CASCADE;
ALTER TABLE festival_edition_photo_album ADD CONSTRAINT festival_edition_photo_album_album_id_photo_album_id FOREIGN KEY (album_id) REFERENCES photo_album(id) ON DELETE CASCADE;
ALTER TABLE festival_edition_stire ADD CONSTRAINT festival_edition_stire_stire_id_stire_id FOREIGN KEY (stire_id) REFERENCES stire(id) ON DELETE CASCADE;
ALTER TABLE festival_edition_stire ADD CONSTRAINT festival_edition_stire_festival_edition_id_festival_edition_id FOREIGN KEY (festival_edition_id) REFERENCES festival_edition(id) ON DELETE CASCADE;
ALTER TABLE festival_edition_video_album ADD CONSTRAINT fffi_1 FOREIGN KEY (festival_edition_id) REFERENCES festival_edition(id) ON DELETE CASCADE;
ALTER TABLE festival_edition_video_album ADD CONSTRAINT festival_edition_video_album_album_id_video_album_id FOREIGN KEY (album_id) REFERENCES video_album(id) ON DELETE CASCADE;
ALTER TABLE festival_section ADD CONSTRAINT festival_section_festival_edition_id_festival_edition_id FOREIGN KEY (festival_edition_id) REFERENCES festival_edition(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE festival_section_participant ADD CONSTRAINT fffi_2 FOREIGN KEY (festival_section_id) REFERENCES festival_section(id) ON DELETE CASCADE;
ALTER TABLE festival_section_person ADD CONSTRAINT festival_section_person_person_id_person_id FOREIGN KEY (person_id) REFERENCES person(id) ON DELETE CASCADE;
ALTER TABLE festival_section_person ADD CONSTRAINT festival_section_person_festival_section_id_festival_section_id FOREIGN KEY (festival_section_id) REFERENCES festival_section(id) ON DELETE CASCADE;
ALTER TABLE film ADD CONSTRAINT film_video_album_id_video_album_id FOREIGN KEY (video_album_id) REFERENCES video_album(id) ON DELETE CASCADE;
ALTER TABLE film ADD CONSTRAINT film_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE film ADD CONSTRAINT film_photo_album_id_photo_album_id FOREIGN KEY (photo_album_id) REFERENCES photo_album(id) ON DELETE CASCADE;
ALTER TABLE film_article ADD CONSTRAINT film_article_film_id_film_id FOREIGN KEY (film_id) REFERENCES film(id) ON DELETE CASCADE;
ALTER TABLE film_article ADD CONSTRAINT film_article_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE film_episode ADD CONSTRAINT film_episode_film_id_film_id FOREIGN KEY (film_id) REFERENCES film(id) ON DELETE CASCADE;
ALTER TABLE film_genre ADD CONSTRAINT film_genre_genre_id_genre_id FOREIGN KEY (genre_id) REFERENCES genre(id) ON DELETE CASCADE;
ALTER TABLE film_genre ADD CONSTRAINT film_genre_film_id_film_id FOREIGN KEY (film_id) REFERENCES film(id) ON DELETE CASCADE;
ALTER TABLE film_person ADD CONSTRAINT film_person_person_id_person_id FOREIGN KEY (person_id) REFERENCES person(id) ON DELETE CASCADE;
ALTER TABLE film_person ADD CONSTRAINT film_person_film_id_film_id FOREIGN KEY (film_id) REFERENCES film(id) ON DELETE CASCADE;
ALTER TABLE film_stire ADD CONSTRAINT film_stire_stire_id_stire_id FOREIGN KEY (stire_id) REFERENCES stire(id) ON DELETE CASCADE;
ALTER TABLE film_stire ADD CONSTRAINT film_stire_film_id_film_id FOREIGN KEY (film_id) REFERENCES film(id) ON DELETE CASCADE;
ALTER TABLE library ADD CONSTRAINT library_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE person ADD CONSTRAINT person_video_album_id_video_album_id FOREIGN KEY (video_album_id) REFERENCES video_album(id) ON DELETE CASCADE;
ALTER TABLE person ADD CONSTRAINT person_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE person ADD CONSTRAINT person_photo_album_id_photo_album_id FOREIGN KEY (photo_album_id) REFERENCES photo_album(id) ON DELETE CASCADE;
ALTER TABLE person_article ADD CONSTRAINT person_article_person_id_person_id FOREIGN KEY (person_id) REFERENCES person(id) ON DELETE CASCADE;
ALTER TABLE person_article ADD CONSTRAINT person_article_article_id_article_id FOREIGN KEY (article_id) REFERENCES article(id) ON DELETE CASCADE;
ALTER TABLE person_photo_album ADD CONSTRAINT person_photo_album_person_id_person_id FOREIGN KEY (person_id) REFERENCES person(id) ON DELETE CASCADE;
ALTER TABLE person_photo_album ADD CONSTRAINT person_photo_album_album_id_photo_album_id FOREIGN KEY (album_id) REFERENCES photo_album(id) ON DELETE CASCADE;
ALTER TABLE person_stire ADD CONSTRAINT person_stire_stire_id_stire_id FOREIGN KEY (stire_id) REFERENCES stire(id) ON DELETE CASCADE;
ALTER TABLE person_stire ADD CONSTRAINT person_stire_person_id_person_id FOREIGN KEY (person_id) REFERENCES person(id) ON DELETE CASCADE;
ALTER TABLE person_video_album ADD CONSTRAINT person_video_album_person_id_person_id FOREIGN KEY (person_id) REFERENCES person(id) ON DELETE CASCADE;
ALTER TABLE person_video_album ADD CONSTRAINT person_video_album_album_id_video_album_id FOREIGN KEY (album_id) REFERENCES video_album(id) ON DELETE CASCADE;
ALTER TABLE photo ADD CONSTRAINT photo_album_id_photo_album_id FOREIGN KEY (album_id) REFERENCES photo_album(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE photo_album ADD CONSTRAINT photo_album_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE photo_album ADD CONSTRAINT photo_album_library_id_library_id FOREIGN KEY (library_id) REFERENCES library(id) ON DELETE CASCADE;
ALTER TABLE shop_film ADD CONSTRAINT shop_film_shop_id_shop_id FOREIGN KEY (shop_id) REFERENCES shop(id) ON DELETE CASCADE;
ALTER TABLE shop_film ADD CONSTRAINT shop_film_film_id_film_id FOREIGN KEY (film_id) REFERENCES film(id) ON DELETE CASCADE;
ALTER TABLE stire ADD CONSTRAINT stire_video_album_id_video_album_id FOREIGN KEY (video_album_id) REFERENCES video_album(id) ON DELETE CASCADE;
ALTER TABLE stire ADD CONSTRAINT stire_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE stire ADD CONSTRAINT stire_photo_album_id_photo_album_id FOREIGN KEY (photo_album_id) REFERENCES photo_album(id) ON DELETE CASCADE;
ALTER TABLE video ADD CONSTRAINT video_album_id_video_album_id FOREIGN KEY (album_id) REFERENCES video_album(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE video_album ADD CONSTRAINT video_album_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE video_album ADD CONSTRAINT video_album_library_id_library_id FOREIGN KEY (library_id) REFERENCES library(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user ADD CONSTRAINT sf_guard_user_location_id_location_id FOREIGN KEY (location_id) REFERENCES location(id);
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
