<?php

/**
 * Photo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Photo extends BasePhoto
{
	public function preInsert($event)
	{
		if (sfContext::getInstance()->getUser()->hasCredential(array('Fara_moderare', 'Moderator'), false)){
  		$event->getInvoker()->setState(Library::STATE_ACTIVE);	
  	} else {
  		$event->getInvoker()->setState(Library::STATE_PENDING);
  	}
	}
	
	public function preDelete($event)
	{
		// Delete the big file and the thumbnail
		unlink(sfConfig::get('app_photos_path') . '/' . $event->getInvoker()->getFilename());
		unlink(sfConfig::get('app_photos_path') . '/t-' . $event->getInvoker()->getFilename());
		unlink(sfConfig::get('app_photos_path') . '/ts-' . $event->getInvoker()->getFilename());

		return parent::preDelete($event);
	}

	public function createFile($sourceFile, $filename)
	{
		if (!is_readable($sourceFile)){
			throw new sfException('Source file not available: ' . $sourceFile);
		}

		/* Create the big file */
		$photo = new sfThumbnail(sfConfig::get('app_photos_sourceimage_size'), sfConfig::get('app_photos_sourceimage_size'));
		$photo->loadFile($sourceFile);
		$photo->save(sfConfig::get('app_photos_path') . '/' . $filename);

		/* Create the thumbnail */
		$thumb = new sfThumbnail(sfConfig::get('app_photos_thumbnail_size'), sfConfig::get('app_photos_thumbnail_size'));
		$thumb->loadFile($sourceFile);
		$thumb->save(sfConfig::get('app_photos_path') . '/t-' . $filename);

		/* Create the small thumbnail */
		$thumb = new sfThumbnail(sfConfig::get('app_photos_thumbnail_small_size'), sfConfig::get('app_photos_thumbnail_small_size'));
		$thumb->loadFile($sourceFile);
		$thumb->save(sfConfig::get('app_photos_path') . '/ts-' . $filename);
	}

	public function getThumb()
	{
		return sfConfig::get('app_photos_path_for_web') . '/t-' . $this->_get('filename');
	}

	public function getPhoto()
	{
		return sfConfig::get('app_photos_path_for_web') . '/' . $this->_get('filename');
	}
}