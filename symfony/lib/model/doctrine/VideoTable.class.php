<?php

/**
 * VideoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class VideoTable extends Doctrine_Table
{
	public static function getInstance()
	{
		return Doctrine_Core::getTable('Video');
	}

	public function getListForView($albumId)
	{
		return Doctrine_Query::create()
			->from('Video p')
			->where('p.album_id = ?', $albumId)
			->orderBy('p.position ASC')
			->execute();
	}

	public function getFirst($albumId)
	{
		return Doctrine_Query::create()
			->from('Video p')
			->where('p.album_id = ?', $albumId)
			->andWhere('p.position = 1')
			->fetchOne();
	}

	public function getNeighbours($albumId, $position)
	{
		$videos = Doctrine_Query::create()
			->from('Video p')
			->select('p.id, p.position')
			->where('p.album_id = ?', $albumId)
			->whereIn('p.position', array($position - 1, $position + 1))
			->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
			
		$neighbours = array();
		 
		foreach($videos as $video){
			if ($video['position'] == $position - 1){
				$neighbours['previous'] = $video;
			}

			if ($video['position'] == $position + 1){
				$neighbours['next'] = $video;
			}
		}
		 
		return $neighbours;
	}
	
	public function getCountByAlbum($albumId)
	{
		$q = Doctrine_Query::create()
			->select('COUNT(DISTINCT p.id) counter')
			->from('Video p')		
			->where('p.album_id = ?', $albumId)
			->fetchOne(array(), Doctrine_Core::HYDRATE_ARRAY);
			
		return $q['counter'];
	}

	public function getLatestTrailers($limit = null)
	{
		$q = Doctrine_Query::create()
			->select('v.*, f.id, a.id, f.url_key, f.name_ro, f.name_en')
			->from('Video v')
			->innerJoin('v.Album a')
			->innerJoin('a.Film f')
			->orderBy('a.publish_date DESC')
			->where('v.state = 1 AND a.publish_date IS NOT NULL AND a.publish_date <= NOW()');

		if (isset($limit)){
			$q = $q->limit($limit);
		}

		return $q->execute();

	}
	
//	public function getForSearch($term, $limit)
//	{
//		$term = preg_replace('/[^a-zA-Z]/i', ' ', $term);
//		$term = preg_replace('/\s+/i', ' ', $term);
//		$terms = explode(' ', $term);
//		unset($term);
//		
//		$qArray = array();
//		$qString = '';
//		foreach ($terms as $term){
//			$qString = 'v.name REGEXP ? ';
//			$qArray[] = '(^| |-)' . $term;
//			
//		}
//		
//		return Doctrine_Query::create()
//			->from('Video v')
//			->where('v.state = 1')
//			->andWhere($qString, $qArray)
//			->orderBy('v.id desc')
//			->limit($limit)
//			->execute();
//	}
	
	public function getForSearch($term, $limit)
	{
		$term = preg_replace('/[^a-zA-Z]/i', ' ', $term);
		$term = preg_replace('/\s+/i', ' ', $term);
		$terms = explode(' ', $term);
		
		foreach ($terms as $key => $term){
			if (strlen($terms[$key]) <= 2 ){
				unset ($terms[$key]);
			}
		}
		
		unset($term);
		
		$qArray = array();
		$qString = '';
		
		
		$q = Doctrine_Query::create()
			->from('Video v')
			->where('v.state = 1');
		
		foreach ($terms as $term){
			$q = $q->andWhere('v.name LIKE ?', array('%' . $term . '%'));	
		}
		
		return $q->limit($limit)
			->execute();
	}
}