<?php

/**
 * PhotoAlbumTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PhotoAlbumTable extends Doctrine_Table
{
	public function cloneObject($libraryId)
	{
		$album = Doctrine_Core::getTable('PhotoAlbum')->findOneByLibraryId($libraryId);
		
		/* Cloning the album */
		$newAlbum = new PhotoAlbum();
		$newAlbum->setState($album->getState());
		$newAlbum->setPublishDate($album->getPublishDate());
		$newAlbum->setUserId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
		$newAlbum->setName($album->getName() . ' - clone');
		$newAlbum->save();
		
		/* Cloning the photos in the album */
		$photos = Doctrine_Core::getTable('Photo')->findByAlbumId($album->getId());
		foreach($photos as $photo){
			$pieces = explode('.', $photo->getFilename());
			$extension = $pieces[1];
			$newFilename = md5(rand(0, 1000) . $newAlbum->getId()) . '.' . $extension;
			
			/* Copying the photo files */
			copy(sfConfig::get('app_photos_path') . '/' . $photo->getFilename(), sfConfig::get('app_photos_path') . '/' . $newFilename);
			copy(sfConfig::get('app_photos_path') . '/t-' . $photo->getFilename(), sfConfig::get('app_photos_path') . '/t-' . $newFilename);
			copy(sfConfig::get('app_photos_path') . '/ts-' . $photo->getFilename(), sfConfig::get('app_photos_path') . '/ts-' . $newFilename);
			
			/* Creating the new photo in the database */
			$newPhoto = new Photo();
			$newPhoto->setAlbumId($newAlbum->getId());
			$newPhoto->setState($photo->getState());
			$newPhoto->setDescription($photo->getDescription());
			$newPhoto->setPosition($photo->getPosition());
			$newPhoto->setFilename($newFilename);
			$newPhoto->save();
		}
	}
	
	public function allow($libraryId)
	{
		$album = Doctrine_Core::getTable('PhotoAlbum')->findOneByLibraryId($libraryId);
		
		/* First update photo state*/
		$q = Doctrine_Query::create()
			->update('Photo p')
			->set('p.state', '?', Library::STATE_ACTIVE)
			->where('p.album_id = ?', $album->getId())
			->execute();
		
		/* Update album state*/
		$album->setState(Library::STATE_ACTIVE);
		$album->save();
	}

	public function getForApi($term)
	{
		$term = '(^| |-)' . $term ;
		
		$bruteAlbums = Doctrine_Query::create()
			->from('PhotoAlbum a')
			->andWhere('a.state = 1')
			->andWhere('a.name REGEXP ?', $term)
			->orderBy('a.name ASC')
			->limit(50)
			->execute();

    $albums = array();					              
		foreach ($bruteAlbums as $key => $bruteAlbum){
			$albums[$key]['value'] = $bruteAlbum->getId();
			$albums[$key]['label'] = $bruteAlbum->getName();
		}
		
		return $albums;
	}
}