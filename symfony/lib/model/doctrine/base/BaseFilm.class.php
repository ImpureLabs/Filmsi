<?php

/**
 * BaseFilm
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $imdb
 * @property bool $is_series
 * @property string $name_ro
 * @property string $name_en
 * @property year $year
 * @property string $rating
 * @property string $filename
 * @property string $meta_description
 * @property string $meta_keywords
 * @property string $url_key
 * @property string $duration
 * @property bool $is_type_film
 * @property bool $is_type_digital
 * @property bool $is_type_3d
 * @property string $distribuitor
 * @property string $description_teaser
 * @property text $description_content
 * @property date $publish_date
 * @property enum $state
 * @property integer $user_id
 * @property integer $library_id
 * @property integer $photo_album_id
 * @property integer $video_album_id
 * @property bool $status_in_production
 * @property bool $status_cinema
 * @property integer $status_cinema_year
 * @property integer $status_cinema_month
 * @property integer $status_cinema_day
 * @property bool $status_dvd
 * @property integer $status_dvd_year
 * @property integer $status_dvd_month
 * @property integer $status_dvd_day
 * @property bool $status_bluray
 * @property integer $status_bluray_year
 * @property integer $status_bluray_month
 * @property integer $status_bluray_day
 * @property bool $status_online
 * @property integer $status_online_year
 * @property integer $status_online_month
 * @property integer $status_online_day
 * @property string $background_filename
 * @property PhotoAlbum $PhotoAlbum
 * @property VideoAlbum $VideoAlbum
 * @property Doctrine_Collection $Genres
 * @property Doctrine_Collection $Persons
 * @property sfGuardUser $Author
 * @property Doctrine_Collection $Article
 * @property FilmEpisode $FilmEpisode
 * @property Doctrine_Collection $FilmGenre
 * @property Doctrine_Collection $FilmPerson
 * @property Doctrine_Collection $Schedule
 * @property Doctrine_Collection $FilmArticle
 * @property Doctrine_Collection $Stires
 * @property Doctrine_Collection $FilmStire
 * @property Doctrine_Collection $Shops
 * @property Doctrine_Collection $ShopFilm
 * @property Doctrine_Collection $BoxofficeFilm
 * 
 * @method string              getImdb()                 Returns the current record's "imdb" value
 * @method bool                getIsSeries()             Returns the current record's "is_series" value
 * @method string              getNameRo()               Returns the current record's "name_ro" value
 * @method string              getNameEn()               Returns the current record's "name_en" value
 * @method year                getYear()                 Returns the current record's "year" value
 * @method string              getRating()               Returns the current record's "rating" value
 * @method string              getFilename()             Returns the current record's "filename" value
 * @method string              getMetaDescription()      Returns the current record's "meta_description" value
 * @method string              getMetaKeywords()         Returns the current record's "meta_keywords" value
 * @method string              getUrlKey()               Returns the current record's "url_key" value
 * @method string              getDuration()             Returns the current record's "duration" value
 * @method bool                getIsTypeFilm()           Returns the current record's "is_type_film" value
 * @method bool                getIsTypeDigital()        Returns the current record's "is_type_digital" value
 * @method bool                getIsType3d()             Returns the current record's "is_type_3d" value
 * @method string              getDistribuitor()         Returns the current record's "distribuitor" value
 * @method string              getDescriptionTeaser()    Returns the current record's "description_teaser" value
 * @method text                getDescriptionContent()   Returns the current record's "description_content" value
 * @method date                getPublishDate()          Returns the current record's "publish_date" value
 * @method enum                getState()                Returns the current record's "state" value
 * @method integer             getUserId()               Returns the current record's "user_id" value
 * @method integer             getLibraryId()            Returns the current record's "library_id" value
 * @method integer             getPhotoAlbumId()         Returns the current record's "photo_album_id" value
 * @method integer             getVideoAlbumId()         Returns the current record's "video_album_id" value
 * @method bool                getStatusInProduction()   Returns the current record's "status_in_production" value
 * @method bool                getStatusCinema()         Returns the current record's "status_cinema" value
 * @method integer             getStatusCinemaYear()     Returns the current record's "status_cinema_year" value
 * @method integer             getStatusCinemaMonth()    Returns the current record's "status_cinema_month" value
 * @method integer             getStatusCinemaDay()      Returns the current record's "status_cinema_day" value
 * @method bool                getStatusDvd()            Returns the current record's "status_dvd" value
 * @method integer             getStatusDvdYear()        Returns the current record's "status_dvd_year" value
 * @method integer             getStatusDvdMonth()       Returns the current record's "status_dvd_month" value
 * @method integer             getStatusDvdDay()         Returns the current record's "status_dvd_day" value
 * @method bool                getStatusBluray()         Returns the current record's "status_bluray" value
 * @method integer             getStatusBlurayYear()     Returns the current record's "status_bluray_year" value
 * @method integer             getStatusBlurayMonth()    Returns the current record's "status_bluray_month" value
 * @method integer             getStatusBlurayDay()      Returns the current record's "status_bluray_day" value
 * @method bool                getStatusOnline()         Returns the current record's "status_online" value
 * @method integer             getStatusOnlineYear()     Returns the current record's "status_online_year" value
 * @method integer             getStatusOnlineMonth()    Returns the current record's "status_online_month" value
 * @method integer             getStatusOnlineDay()      Returns the current record's "status_online_day" value
 * @method string              getBackgroundFilename()   Returns the current record's "background_filename" value
 * @method PhotoAlbum          getPhotoAlbum()           Returns the current record's "PhotoAlbum" value
 * @method VideoAlbum          getVideoAlbum()           Returns the current record's "VideoAlbum" value
 * @method Doctrine_Collection getGenres()               Returns the current record's "Genres" collection
 * @method Doctrine_Collection getPersons()              Returns the current record's "Persons" collection
 * @method sfGuardUser         getAuthor()               Returns the current record's "Author" value
 * @method Doctrine_Collection getArticle()              Returns the current record's "Article" collection
 * @method FilmEpisode         getFilmEpisode()          Returns the current record's "FilmEpisode" value
 * @method Doctrine_Collection getFilmGenre()            Returns the current record's "FilmGenre" collection
 * @method Doctrine_Collection getFilmPerson()           Returns the current record's "FilmPerson" collection
 * @method Doctrine_Collection getSchedule()             Returns the current record's "Schedule" collection
 * @method Doctrine_Collection getFilmArticle()          Returns the current record's "FilmArticle" collection
 * @method Doctrine_Collection getStires()               Returns the current record's "Stires" collection
 * @method Doctrine_Collection getFilmStire()            Returns the current record's "FilmStire" collection
 * @method Doctrine_Collection getShops()                Returns the current record's "Shops" collection
 * @method Doctrine_Collection getShopFilm()             Returns the current record's "ShopFilm" collection
 * @method Doctrine_Collection getBoxofficeFilm()        Returns the current record's "BoxofficeFilm" collection
 * @method Film                setImdb()                 Sets the current record's "imdb" value
 * @method Film                setIsSeries()             Sets the current record's "is_series" value
 * @method Film                setNameRo()               Sets the current record's "name_ro" value
 * @method Film                setNameEn()               Sets the current record's "name_en" value
 * @method Film                setYear()                 Sets the current record's "year" value
 * @method Film                setRating()               Sets the current record's "rating" value
 * @method Film                setFilename()             Sets the current record's "filename" value
 * @method Film                setMetaDescription()      Sets the current record's "meta_description" value
 * @method Film                setMetaKeywords()         Sets the current record's "meta_keywords" value
 * @method Film                setUrlKey()               Sets the current record's "url_key" value
 * @method Film                setDuration()             Sets the current record's "duration" value
 * @method Film                setIsTypeFilm()           Sets the current record's "is_type_film" value
 * @method Film                setIsTypeDigital()        Sets the current record's "is_type_digital" value
 * @method Film                setIsType3d()             Sets the current record's "is_type_3d" value
 * @method Film                setDistribuitor()         Sets the current record's "distribuitor" value
 * @method Film                setDescriptionTeaser()    Sets the current record's "description_teaser" value
 * @method Film                setDescriptionContent()   Sets the current record's "description_content" value
 * @method Film                setPublishDate()          Sets the current record's "publish_date" value
 * @method Film                setState()                Sets the current record's "state" value
 * @method Film                setUserId()               Sets the current record's "user_id" value
 * @method Film                setLibraryId()            Sets the current record's "library_id" value
 * @method Film                setPhotoAlbumId()         Sets the current record's "photo_album_id" value
 * @method Film                setVideoAlbumId()         Sets the current record's "video_album_id" value
 * @method Film                setStatusInProduction()   Sets the current record's "status_in_production" value
 * @method Film                setStatusCinema()         Sets the current record's "status_cinema" value
 * @method Film                setStatusCinemaYear()     Sets the current record's "status_cinema_year" value
 * @method Film                setStatusCinemaMonth()    Sets the current record's "status_cinema_month" value
 * @method Film                setStatusCinemaDay()      Sets the current record's "status_cinema_day" value
 * @method Film                setStatusDvd()            Sets the current record's "status_dvd" value
 * @method Film                setStatusDvdYear()        Sets the current record's "status_dvd_year" value
 * @method Film                setStatusDvdMonth()       Sets the current record's "status_dvd_month" value
 * @method Film                setStatusDvdDay()         Sets the current record's "status_dvd_day" value
 * @method Film                setStatusBluray()         Sets the current record's "status_bluray" value
 * @method Film                setStatusBlurayYear()     Sets the current record's "status_bluray_year" value
 * @method Film                setStatusBlurayMonth()    Sets the current record's "status_bluray_month" value
 * @method Film                setStatusBlurayDay()      Sets the current record's "status_bluray_day" value
 * @method Film                setStatusOnline()         Sets the current record's "status_online" value
 * @method Film                setStatusOnlineYear()     Sets the current record's "status_online_year" value
 * @method Film                setStatusOnlineMonth()    Sets the current record's "status_online_month" value
 * @method Film                setStatusOnlineDay()      Sets the current record's "status_online_day" value
 * @method Film                setBackgroundFilename()   Sets the current record's "background_filename" value
 * @method Film                setPhotoAlbum()           Sets the current record's "PhotoAlbum" value
 * @method Film                setVideoAlbum()           Sets the current record's "VideoAlbum" value
 * @method Film                setGenres()               Sets the current record's "Genres" collection
 * @method Film                setPersons()              Sets the current record's "Persons" collection
 * @method Film                setAuthor()               Sets the current record's "Author" value
 * @method Film                setArticle()              Sets the current record's "Article" collection
 * @method Film                setFilmEpisode()          Sets the current record's "FilmEpisode" value
 * @method Film                setFilmGenre()            Sets the current record's "FilmGenre" collection
 * @method Film                setFilmPerson()           Sets the current record's "FilmPerson" collection
 * @method Film                setSchedule()             Sets the current record's "Schedule" collection
 * @method Film                setFilmArticle()          Sets the current record's "FilmArticle" collection
 * @method Film                setStires()               Sets the current record's "Stires" collection
 * @method Film                setFilmStire()            Sets the current record's "FilmStire" collection
 * @method Film                setShops()                Sets the current record's "Shops" collection
 * @method Film                setShopFilm()             Sets the current record's "ShopFilm" collection
 * @method Film                setBoxofficeFilm()        Sets the current record's "BoxofficeFilm" collection
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFilm extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('film');
        $this->hasColumn('visit_count', 'integer', null, array(
             'type' => 'integer'
             ));
        $this->hasColumn('imdb', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('is_series', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('name_ro', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('name_en', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('year', 'year', null, array(
             'type' => 'year',
             ));
        $this->hasColumn('rating', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('filename', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('meta_description', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('meta_keywords', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('url_key', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('duration', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('is_type_film', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('is_type_digital', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('is_type_3d', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('distribuitor', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('description_teaser', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('description_content', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('publish_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('state', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => -1,
              1 => 0,
              2 => 1,
             ),
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('library_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('photo_album_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('video_album_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_in_production', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('status_cinema', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('status_cinema_year', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_cinema_month', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_cinema_day', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_dvd', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('status_dvd_year', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_dvd_month', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_dvd_day', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_bluray', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('status_bluray_year', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_bluray_month', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_bluray_day', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_online', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('status_online_year', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_online_month', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_online_day', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_tv', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('status_tv_year', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_tv_month', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_tv_day', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('background_filename', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PhotoAlbum', array(
             'local' => 'photo_album_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('VideoAlbum', array(
             'local' => 'video_album_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Genre as Genres', array(
             'refClass' => 'FilmGenre',
             'local' => 'film_id',
             'foreign' => 'genre_id'));

        $this->hasMany('Video as Videos', array(
             'local' => 'video_album_id',
             'foreign' => 'album_id'));

        $this->hasMany('Person as Persons', array(
             'refClass' => 'FilmPerson',
             'local' => 'film_id',
             'foreign' => 'person_id'));

        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Article', array(
             'refClass' => 'FilmArticle',
             'local' => 'film_id',
             'foreign' => 'article_id'));

        $this->hasOne('FilmEpisode', array(
             'local' => 'id',
             'foreign' => 'film_id'));

        $this->hasMany('FilmGenre', array(
             'local' => 'id',
             'foreign' => 'film_id'));

        $this->hasMany('FilmPerson', array(
             'local' => 'id',
             'foreign' => 'film_id'));

        $this->hasMany('CinemaSchedule as Schedule', array(
             'local' => 'id',
             'foreign' => 'film_id'));

        $this->hasMany('FilmArticle', array(
             'local' => 'id',
             'foreign' => 'film_id'));

        $this->hasMany('Stire as Stires', array(
             'refClass' => 'FilmStire',
             'local' => 'film_id',
             'foreign' => 'stire_id'));

        $this->hasMany('FilmStire', array(
             'local' => 'id',
             'foreign' => 'film_id'));

        $this->hasMany('Shop as Shops', array(
             'refClass' => 'ShopFilm',
             'local' => 'film_id',
             'foreign' => 'shop_id'));

        $this->hasMany('ShopFilm', array(
             'local' => 'id',
             'foreign' => 'film_id'));

        $this->hasMany('BoxofficeFilm', array(
             'local' => 'id',
             'foreign' => 'film_1_id'));

        $inlibrary0 = new inLibrary(array(
             'type_key' => 'Film',
             'has_imdb' => true,
             'has_category' => false,
             'has_photo' => true,
             'has_video' => true,
             ));
        $this->actAs($inlibrary0);

		$timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}