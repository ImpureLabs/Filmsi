<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $email
 * @property text $content
 * @property integer $user_id
 * @property bool $state
 * @property string $ip
 * @property string $type
 * 
 * @method string  getName()    Returns the current record's "name" value
 * @method string  getEmail()   Returns the current record's "email" value
 * @method text    getContent() Returns the current record's "content" value
 * @method integer getUserId()  Returns the current record's "user_id" value
 * @method bool    getState()   Returns the current record's "state" value
 * @method string  getIp()      Returns the current record's "ip" value
 * @method string  getType()    Returns the current record's "type" value
 * @method Comment setName()    Sets the current record's "name" value
 * @method Comment setEmail()   Sets the current record's "email" value
 * @method Comment setContent() Sets the current record's "content" value
 * @method Comment setUserId()  Sets the current record's "user_id" value
 * @method Comment setState()   Sets the current record's "state" value
 * @method Comment setIp()      Sets the current record's "ip" value
 * @method Comment setType()    Sets the current record's "type" value
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             'email' => true,
             ));
        $this->hasColumn('content', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('state', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('ip', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('type', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}