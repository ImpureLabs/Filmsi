<?php

/**
 * BaseFestivalEditionVideoAlbum
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $festival_edition_id
 * @property integer $album_id
 * @property FestivalEdition $FestivalEdition
 * @property VideoAlbum $VideoAlbum
 * 
 * @method integer                   getFestivalEditionId()   Returns the current record's "festival_edition_id" value
 * @method integer                   getAlbumId()             Returns the current record's "album_id" value
 * @method FestivalEdition           getFestivalEdition()     Returns the current record's "FestivalEdition" value
 * @method VideoAlbum                getVideoAlbum()          Returns the current record's "VideoAlbum" value
 * @method FestivalEditionVideoAlbum setFestivalEditionId()   Sets the current record's "festival_edition_id" value
 * @method FestivalEditionVideoAlbum setAlbumId()             Sets the current record's "album_id" value
 * @method FestivalEditionVideoAlbum setFestivalEdition()     Sets the current record's "FestivalEdition" value
 * @method FestivalEditionVideoAlbum setVideoAlbum()          Sets the current record's "VideoAlbum" value
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFestivalEditionVideoAlbum extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('festival_edition_video_album');
        $this->hasColumn('festival_edition_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('album_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('FestivalEdition', array(
             'local' => 'festival_edition_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('VideoAlbum', array(
             'local' => 'album_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}