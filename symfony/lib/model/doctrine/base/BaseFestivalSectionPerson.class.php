<?php

/**
 * BaseFestivalSectionPerson
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $festival_section_id
 * @property integer $person_id
 * @property FestivalSection $FestivalSection
 * @property Person $Person
 * 
 * @method integer               getFestivalSectionId()   Returns the current record's "festival_section_id" value
 * @method integer               getPersonId()            Returns the current record's "person_id" value
 * @method FestivalSection       getFestivalSection()     Returns the current record's "FestivalSection" value
 * @method Person                getPerson()              Returns the current record's "Person" value
 * @method FestivalSectionPerson setFestivalSectionId()   Sets the current record's "festival_section_id" value
 * @method FestivalSectionPerson setPersonId()            Sets the current record's "person_id" value
 * @method FestivalSectionPerson setFestivalSection()     Sets the current record's "FestivalSection" value
 * @method FestivalSectionPerson setPerson()              Sets the current record's "Person" value
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFestivalSectionPerson extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('festival_section_person');
        $this->hasColumn('festival_section_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('person_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('FestivalSection', array(
             'local' => 'festival_section_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Person', array(
             'local' => 'person_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}