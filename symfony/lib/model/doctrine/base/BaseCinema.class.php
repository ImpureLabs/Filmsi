<?php

/**
 * BaseCinema
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $location_id
 * @property string $address
 * @property string $phone
 * @property string $website
 * @property string $lat
 * @property string $lng
 * @property integer $map_zoom
 * @property string $seats
 * @property integer $room_count
 * @property string $sound
 * @property bool $is_type_film
 * @property bool $is_type_digital
 * @property bool $is_type_3d
 * @property string $ticket_price
 * @property string $filename
 * @property string $description_teaser
 * @property text $description_content
 * @property string $meta_description
 * @property string $meta_keywords
 * @property string $url_key
 * @property date $publish_date
 * @property enum $state
 * @property integer $user_id
 * @property integer $library_id
 * @property Doctrine_Collection $Service
 * @property sfGuardUser $Author
 * @property Location $Location
 * @property Doctrine_Collection $Article
 * @property Doctrine_Collection $CinemaService
 * @property Doctrine_Collection $Promotions
 * @property Doctrine_Collection $Schedule
 * @property Doctrine_Collection $CinemaArticle
 * @property Doctrine_Collection $Stires
 * @property Doctrine_Collection $CinemaStire
 * 
 * @method string              getName()                Returns the current record's "name" value
 * @method integer             getLocationId()          Returns the current record's "location_id" value
 * @method string              getAddress()             Returns the current record's "address" value
 * @method string              getPhone()               Returns the current record's "phone" value
 * @method string              getWebsite()             Returns the current record's "website" value
 * @method string              getLat()                 Returns the current record's "lat" value
 * @method string              getLng()                 Returns the current record's "lng" value
 * @method integer             getMapZoom()             Returns the current record's "map_zoom" value
 * @method string              getSeats()               Returns the current record's "seats" value
 * @method integer             getRoomCount()           Returns the current record's "room_count" value
 * @method string              getSound()               Returns the current record's "sound" value
 * @method bool                getIsTypeFilm()          Returns the current record's "is_type_film" value
 * @method bool                getIsTypeDigital()       Returns the current record's "is_type_digital" value
 * @method bool                getIsType3d()            Returns the current record's "is_type_3d" value
 * @method string              getTicketPrice()         Returns the current record's "ticket_price" value
 * @method string              getFilename()            Returns the current record's "filename" value
 * @method string              getDescriptionTeaser()   Returns the current record's "description_teaser" value
 * @method text                getDescriptionContent()  Returns the current record's "description_content" value
 * @method string              getMetaDescription()     Returns the current record's "meta_description" value
 * @method string              getMetaKeywords()        Returns the current record's "meta_keywords" value
 * @method string              getUrlKey()              Returns the current record's "url_key" value
 * @method date                getPublishDate()         Returns the current record's "publish_date" value
 * @method enum                getState()               Returns the current record's "state" value
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method integer             getLibraryId()           Returns the current record's "library_id" value
 * @method Doctrine_Collection getService()             Returns the current record's "Service" collection
 * @method sfGuardUser         getAuthor()              Returns the current record's "Author" value
 * @method Location            getLocation()            Returns the current record's "Location" value
 * @method Doctrine_Collection getArticle()             Returns the current record's "Article" collection
 * @method Doctrine_Collection getCinemaService()       Returns the current record's "CinemaService" collection
 * @method Doctrine_Collection getPromotions()          Returns the current record's "Promotions" collection
 * @method Doctrine_Collection getSchedule()            Returns the current record's "Schedule" collection
 * @method Doctrine_Collection getCinemaArticle()       Returns the current record's "CinemaArticle" collection
 * @method Doctrine_Collection getStires()              Returns the current record's "Stires" collection
 * @method Doctrine_Collection getCinemaStire()         Returns the current record's "CinemaStire" collection
 * @method Cinema              setName()                Sets the current record's "name" value
 * @method Cinema              setLocationId()          Sets the current record's "location_id" value
 * @method Cinema              setAddress()             Sets the current record's "address" value
 * @method Cinema              setPhone()               Sets the current record's "phone" value
 * @method Cinema              setWebsite()             Sets the current record's "website" value
 * @method Cinema              setLat()                 Sets the current record's "lat" value
 * @method Cinema              setLng()                 Sets the current record's "lng" value
 * @method Cinema              setMapZoom()             Sets the current record's "map_zoom" value
 * @method Cinema              setSeats()               Sets the current record's "seats" value
 * @method Cinema              setRoomCount()           Sets the current record's "room_count" value
 * @method Cinema              setSound()               Sets the current record's "sound" value
 * @method Cinema              setIsTypeFilm()          Sets the current record's "is_type_film" value
 * @method Cinema              setIsTypeDigital()       Sets the current record's "is_type_digital" value
 * @method Cinema              setIsType3d()            Sets the current record's "is_type_3d" value
 * @method Cinema              setTicketPrice()         Sets the current record's "ticket_price" value
 * @method Cinema              setFilename()            Sets the current record's "filename" value
 * @method Cinema              setDescriptionTeaser()   Sets the current record's "description_teaser" value
 * @method Cinema              setDescriptionContent()  Sets the current record's "description_content" value
 * @method Cinema              setMetaDescription()     Sets the current record's "meta_description" value
 * @method Cinema              setMetaKeywords()        Sets the current record's "meta_keywords" value
 * @method Cinema              setUrlKey()              Sets the current record's "url_key" value
 * @method Cinema              setPublishDate()         Sets the current record's "publish_date" value
 * @method Cinema              setState()               Sets the current record's "state" value
 * @method Cinema              setUserId()              Sets the current record's "user_id" value
 * @method Cinema              setLibraryId()           Sets the current record's "library_id" value
 * @method Cinema              setService()             Sets the current record's "Service" collection
 * @method Cinema              setAuthor()              Sets the current record's "Author" value
 * @method Cinema              setLocation()            Sets the current record's "Location" value
 * @method Cinema              setArticle()             Sets the current record's "Article" collection
 * @method Cinema              setCinemaService()       Sets the current record's "CinemaService" collection
 * @method Cinema              setPromotions()          Sets the current record's "Promotions" collection
 * @method Cinema              setSchedule()            Sets the current record's "Schedule" collection
 * @method Cinema              setCinemaArticle()       Sets the current record's "CinemaArticle" collection
 * @method Cinema              setStires()              Sets the current record's "Stires" collection
 * @method Cinema              setCinemaStire()         Sets the current record's "CinemaStire" collection
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCinema extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cinema');
        $this->hasColumn('name', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('location_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('address', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('phone', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('website', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('lat', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('lng', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('map_zoom', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('seats', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('room_count', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('sound', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('is_type_film', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('is_type_digital', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('is_type_3d', 'bool', null, array(
             'type' => 'bool',
             ));
        $this->hasColumn('ticket_price', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('filename', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('description_teaser', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('description_content', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('meta_description', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('meta_keywords', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('url_key', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('publish_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('state', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => -1,
              1 => 0,
              2 => 1,
             ),
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('library_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('reservation_url', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('photo_album_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('admin_user_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PhotoAlbum', array(
             'local' => 'photo_album_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
        $this->hasOne('sfGuardUser as Admin', array(
             'local' => 'admin_user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
		
        $this->hasMany('Service', array(
             'refClass' => 'CinemaService',
             'local' => 'cinema_id',
             'foreign' => 'service_id'));

        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Location', array(
             'local' => 'location_id',
             'foreign' => 'id'));

        $this->hasMany('Article', array(
             'refClass' => 'CinemaArticle',
             'local' => 'cinema_id',
             'foreign' => 'article_id'));

        $this->hasMany('CinemaService', array(
             'local' => 'id',
             'foreign' => 'cinema_id'));

        $this->hasMany('CinemaPromotion as Promotions', array(
             'local' => 'id',
             'foreign' => 'cinema_id'));

        $this->hasMany('CinemaSchedule as Schedule', array(
             'local' => 'id',
             'foreign' => 'cinema_id'));

        $this->hasMany('CinemaArticle', array(
             'local' => 'id',
             'foreign' => 'cinema_id'));

        $this->hasMany('Stire as Stires', array(
             'refClass' => 'CinemaStire',
             'local' => 'cinema_id',
             'foreign' => 'stire_id'));

        $this->hasMany('CinemaStire', array(
             'local' => 'id',
             'foreign' => 'cinema_id'));

        $inlibrary0 = new inLibrary(array(
             'type_key' => 'Cinema',
             'has_imdb' => false,
             'has_category' => false,
             'has_photo' => false,
             'has_video' => false,
             ));
        $this->actAs($inlibrary0);
    }
}