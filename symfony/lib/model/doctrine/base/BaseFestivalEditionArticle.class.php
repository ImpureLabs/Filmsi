<?php

/**
 * BaseFestivalEditionArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $article_id
 * @property integer $festival_edition_id
 * @property Article $Article
 * @property FestivalEdition $FestivalEdition
 * 
 * @method integer                getArticleId()           Returns the current record's "article_id" value
 * @method integer                getFestivalEditionId()   Returns the current record's "festival_edition_id" value
 * @method Article                getArticle()             Returns the current record's "Article" value
 * @method FestivalEdition        getFestivalEdition()     Returns the current record's "FestivalEdition" value
 * @method FestivalEditionArticle setArticleId()           Sets the current record's "article_id" value
 * @method FestivalEditionArticle setFestivalEditionId()   Sets the current record's "festival_edition_id" value
 * @method FestivalEditionArticle setArticle()             Sets the current record's "Article" value
 * @method FestivalEditionArticle setFestivalEdition()     Sets the current record's "FestivalEdition" value
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFestivalEditionArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('festival_edition_article');
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('festival_edition_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('FestivalEdition', array(
             'local' => 'festival_edition_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}