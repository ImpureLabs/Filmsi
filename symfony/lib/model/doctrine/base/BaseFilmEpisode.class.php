<?php

/**
 * BaseFilmEpisode
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $imdb
 * @property string $name
 * @property integer $season
 * @property integer $number
 * @property integer $film_id
 * @property Film $Film
 * 
 * @method string      getImdb()    Returns the current record's "imdb" value
 * @method string      getName()    Returns the current record's "name" value
 * @method integer     getSeason()  Returns the current record's "season" value
 * @method integer     getNumber()  Returns the current record's "number" value
 * @method integer     getFilmId()  Returns the current record's "film_id" value
 * @method Film        getFilm()    Returns the current record's "Film" value
 * @method FilmEpisode setImdb()    Sets the current record's "imdb" value
 * @method FilmEpisode setName()    Sets the current record's "name" value
 * @method FilmEpisode setSeason()  Sets the current record's "season" value
 * @method FilmEpisode setNumber()  Sets the current record's "number" value
 * @method FilmEpisode setFilmId()  Sets the current record's "film_id" value
 * @method FilmEpisode setFilm()    Sets the current record's "Film" value
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFilmEpisode extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('film_episode');
        $this->hasColumn('imdb', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('name', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('season', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('number', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('film_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Film', array(
             'local' => 'film_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}