<?php

/**
 * BaseShopFilm
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $shop_id
 * @property integer $film_id
 * @property string $url
 * @property enum $format
 * @property Shop $Shop
 * @property Film $Film
 * 
 * @method integer  getShopId()  Returns the current record's "shop_id" value
 * @method integer  getFilmId()  Returns the current record's "film_id" value
 * @method string   getUrl()     Returns the current record's "url" value
 * @method enum     getFormat()  Returns the current record's "format" value
 * @method Shop     getShop()    Returns the current record's "Shop" value
 * @method Film     getFilm()    Returns the current record's "Film" value
 * @method ShopFilm setShopId()  Sets the current record's "shop_id" value
 * @method ShopFilm setFilmId()  Sets the current record's "film_id" value
 * @method ShopFilm setUrl()     Sets the current record's "url" value
 * @method ShopFilm setFormat()  Sets the current record's "format" value
 * @method ShopFilm setShop()    Sets the current record's "Shop" value
 * @method ShopFilm setFilm()    Sets the current record's "Film" value
 * 
 * @package    filmsi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopFilm extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_film');
        $this->hasColumn('shop_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('film_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('url', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('format', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'dvd',
              1 => 'bluray',
              2 => 'online',
             ),
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Shop', array(
             'local' => 'shop_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Film', array(
             'local' => 'film_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}